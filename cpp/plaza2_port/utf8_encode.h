/// @file   utf8_encode.h
/// @author Dmitry S. Melnikov, dmitryme@cqg.com
/// @date   Created on: 06/24/2011 06:28:04 PM
/// @version $Id: Exp $

#ifndef PLAZA2_PORT_UTF8_ENCODE_H
#define PLAZA2_PORT_UTF8_ENCODE_H

#include <string>
#include <list>

inline std::list<long> cp1251_to_utf8(std::string const& str)
{
   static int enc_table[] =
   {0x402,  0x403,  0x201A, 0x453,  0x201E, 0x2026, 0x2020, 0x2021, 0x20AC, 0x2030,
    0x409,  0x2039, 0x40A,  0x40C,  0x40B,  0x40F,  0x452,  0x2018, 0x2019, 0x201C,
    0x201D, 0x2022, 0x2013, 0x2014, 0x2122, 0x459,  0x203A, 0x45A,  0x45C,  0x45B,
    0x45F,  0xA0,   0x40E,  0x45E,  0x408,  0xA4,   0x490,  0xA6,   0xA7,   0x401,
    0xA9,   0x404,  0xAB,   0xAC,   0xAD,   0xAE,   0x407,  0xB0,   0xB1,   0x406,
    0x456,  0x491,  0xB5,   0xB6,   0xB7,   0x451,  0x2116, 0x454,  0xBB,   0x458,
    0x405,  0x455,  0x457};
   
   std::list<long> out;

   for(size_t i = 0; i < str.length(); ++i)
   {
      unsigned char ch = str[i];
      if (ch < 127)
      {
         out.push_back(ch);
      }
      else if (ch >= 0xC0 && ch <= 0xFF)
      {
         out.push_back(ch + 0x350); 
      }
      else
      {
         out.push_back(enc_table[ch - 0x80]);
      }
   }
   return out;
}

#endif // PLAZA2_port_UTF8_ENCODE_H